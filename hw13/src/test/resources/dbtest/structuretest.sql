DROP TABLE IF EXISTS HW_COMMENT;
DROP TABLE IF EXISTS HW_BOOK;
DROP TABLE IF EXISTS HW_AUTHOR;
DROP TABLE IF EXISTS HW_GENRE;
DROP TABLE IF EXISTS HW_USER_ROLE;
DROP TABLE IF EXISTS HW_USER;
DROP TABLE IF EXISTS HW_ROLE;


CREATE TABLE HW_AUTHOR(
    AUTHORID SERIAL PRIMARY KEY,
    AUTHORNAME VARCHAR(1024) NOT NULL UNIQUE
);

CREATE TABLE HW_GENRE(
    GENREID SERIAL PRIMARY KEY,
    GENRENAME VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE HW_BOOK(
    BOOKID SERIAL PRIMARY KEY,
    BOOKNAME VARCHAR(1024) NOT NULL,
    AUTHORID INTEGER NOT NULL,
    GENREID INTEGER NOT NULL,
    UNIQUE (BOOKNAME, AUTHORID),
    CONSTRAINT HW_BOOK_FK01 FOREIGN KEY (AUTHORID) REFERENCES HW_AUTHOR (AUTHORID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT HW_BOOK_FK02 FOREIGN KEY (GENREID) REFERENCES HW_GENRE (GENREID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE HW_COMMENT(
    COMMENTID SERIAL PRIMARY KEY,
    BOOKID INTEGER NOT NULL,
    COMMENT VARCHAR(4000) NOT NULL,
    CONSTRAINT HW_COMMENT_FK01 FOREIGN KEY (BOOKID) REFERENCES HW_BOOK (BOOKID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE HW_USER(
    USERID SERIAL PRIMARY KEY,
    LOGIN VARCHAR(255) NOT NULL UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL
);

CREATE TABLE HW_ROLE(
    ROLEID SERIAL PRIMARY KEY,
    ROLESYSNAME VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE HW_USER_ROLE(
    USERROLEID SERIAL PRIMARY KEY,
    ROLEID SERIAL NOT NULL,
    USERID SERIAL NOT NULL,
    UNIQUE(ROLEID, USERID),
    CONSTRAINT HW_USER_ROLE_FK01 FOREIGN KEY (ROLEID) REFERENCES HW_ROLE (ROLEID) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT HW_USER_ROLE_FK02 FOREIGN KEY (USERID) REFERENCES HW_USER (USERID) ON UPDATE CASCADE ON DELETE CASCADE
);